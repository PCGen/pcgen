
def manifestFile = "code/manifest"

def srcJavaDir = "code/src/java"
def buildClassesDir = "build/classes/java/main"

def pluginsDir = "${projectDir}/plugins"
// def outputPluginsDir = "$pluginsDir/outputplugins"
def bonusPluginsDir = "$pluginsDir/bonusplugins"
def prePluginsDir = "$pluginsDir/preplugins"
def lstPluginsDir = "$pluginsDir/lstplugins"
def systemLstPluginsDir = "$pluginsDir/systemlstplugins"
def jepPluginsDir = "$pluginsDir/jepplugins"
def converterPluginsDir = "$pluginsDir/converterplugins"

tasks.register("makeplugindirs-gradle") {
    description = "Create any needed directories"

    doLast {
        // mkdir outputPluginsDir
        mkdir bonusPluginsDir
        mkdir prePluginsDir
        mkdir lstPluginsDir
        mkdir systemLstPluginsDir
        mkdir jepPluginsDir
        mkdir converterPluginsDir
    }
}

tasks.register("jarExportPlugins-gradle", Jar) {
    description = "Build (Link) Export Token plugin jar files"
    group = "PCGen plugins"
    dependsOn makeplugindirs, tasks.named("compileJava")

    archiveFileName = "outputplugins.jar"
    manifest {
        attributes("Implementation-Title": "PCGen export plugins",
                "Implementation-Version": project.version,
                "Class-Path": "lib/pcgen.jar",
                "Built-Date": new Date(),
                "Built-JDK": "${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')})",
                "Created-By": "Gradle ${project.gradle.gradleVersion}")
    }

    destinationDirectory = file("${pluginsDir}")

    from("${buildClassesDir}") {
            include "plugin/exporttokens/*.class"
    }
}
