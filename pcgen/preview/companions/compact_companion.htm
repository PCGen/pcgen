<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text-html; charset=utf-8" />
<title>|NAME|, |GENDER.LONG| |RACE|</title>
<!--

	*** Addapted from csheet_fantasy_statblock1.htm by Eddy Anthony ***
		
	Designed to match the RSRD text as close as possible.
	The look and feel is secifically designed to match 
	the html version of the RSRD created by Andargor 
	available at http://www.andargor.com/

$Revision$
$Author$
$Date$

-->
<style type="text/css">
	body  { font-family:arial; font-size:14pt; text-align:left; color:black; background:#FFEEA4; font-weight:normal; margin: 0px; padding: 0px; }
	.header { display:block; font-size:12pt; text-align:center; }
</style>
</head>
<body>
<blockquote> <em><font size="+2" color="#500000"><strong>|NAME|</strong><br />
  </font></em> 
  <table width="100%" border="1" cellpadding="1" cellspacing="2" style="border-color:#666666;" bgcolor="FFFFC4" summary="Character Info Table">
    <tr valign="top">
      <td width="25%" style="border-color:#999999;"></td>
    <td width="75%"><strong>|RACE|</strong>
|MANUALWHITESPACE|
|FOR,%class,0,COUNT[CLASSES]-1,1,1|
|IIF(CLASS.%class.TYPE:Monster)|
|ELSE|
|IIF(CLASS.%class.LEVEL:N/A)|
|ELSE|
,
|CLASS.%class.LEVEL|
|IIF(CLASS.%class.LEVEL:1.OR.CLASS.%class.LEVEL:21)|
st
|ELSE|
|IIF(CLASS.%class.LEVEL:2.OR.CLASS.%class.LEVEL:22)|
nd
|ELSE|
|IIF(CLASS.%class.LEVEL:3.OR.CLASS.%class.LEVEL:23)|
rd
|ELSE|
th
|ENDIF|<!--rd-->
|ENDIF|<!--nd-->
|ENDIF|<!--st-->
-Level|MANUALWHITESPACE||CLASS.%class|
|ENDIF|
|ENDIF|<!--TYPE != Monster-->
|ENDFOR|
|ENDMANUALWHITESPACE|
</td>
  </tr>
  <tr valign="top">
    <td width="25%"></td>
    <td width="75%">|SIZELONG| 
|IIF(RACETYPE:None)|
|TEXT.TITLE.TYPE| 
|ELSE|
|RACETYPE| 
|ENDIF|
|MANUALWHITESPACE|
|IIF(VAR.IF(var("COUNT[RACESUBTYPES]")==0;1;0):1)|
|ELSE|
(
|FOR,%subtype,0,COUNT[RACESUBTYPES]-2,1,1|
|RACESUBTYPE.%subtype|, 
|ENDFOR|
|FOR,%subtype,COUNT[RACESUBTYPES]-1,COUNT[RACESUBTYPES]-1,1,1|
|RACESUBTYPE.%subtype|
|ENDFOR|
)
|ENDIF|
|ENDMANUALWHITESPACE|
</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Hit Dice: </b></td>
    <td width="75%">|HITDICE|  (|HP| hp)</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Initiative: </b></td>
    <td width="75%">|INITIATIVEMOD| </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Speed: </b></td>
    <td width="75%">
|FOR,%movement,0,COUNT[MOVE]-1,1,1|
|IIF(MOVE.0.NAME:Walk)|
|IIF(MOVE.%movement.NAME:Walk)|
|MOVE.%movement.RATE| (|MOVE.%movement.SQUARES| squares)
|ELSE|
|MOVE.%movement.NAME| |MOVE.%movement.RATE|
|ENDIF|
|ELSE|
|MOVE.%movement.NAME| |MOVE.%movement.RATE| (|MOVE.%movement.SQUARES| squares)
|ENDIF|
, 
|ENDFOR|

</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Armor Class: </b></td>
    <td width="75%">|AC.Total| (
|IIF(AC.Size:0)|
|ELSE|
|AC.Size.SIGN| size, 
|ENDIF|
|IIF(AC.Ability:0)|
|ELSE|
|AC.Ability.SIGN| Dex, 
|ENDIF|
|IIF(AC.NaturalArmor:0)|
|ELSE|
|AC.NaturalArmor.SIGN| natural, 
|ENDIF|
|IIF(AC.Dodge:0)|
|ELSE|
|AC.Dodge.SIGN| dodge,
|ENDIF|
|IIF(AC.Deflection:0)|
|ELSE|
|AC.Deflection.SIGN| deflection, 
|ENDIF|
|IIF(AC.Misc:0)|
|ELSE|
|AC.Misc.SIGN| misc
|ENDIF|
|IIF(AC.Armor:0)|
|ELSE|
|AC.Armor.SIGN| |EQ.IS.ARMOR.0.NAME|, 
|ENDIF|
|IIF(AC.Shield:0)|
|ELSE|
|AC.Shield.SIGN| 
|IIF(EQ.IS.SHIELD.0.TYPE:HEAVY)|
Heavy Shield, 
|ELSE|
|ENDIF|
|IIF(EQ.IS.SHIELD.0.TYPE:LIGHT)|
Light Shield, 
|ELSE|
|ENDIF|
|IIF(EQ.IS.SHIELD.0.TYPE:BUCKLER)|
Buckler, 
|ELSE|
|ENDIF|
|IIF(EQ.IS.SHIELD.0.TYPE:TOWER)|
Tower Shield, 
|ELSE|
|ENDIF|
|ENDIF|
) touch |AC.Touch|, flatfooted |AC.Flatfooted|</td>
  </tr>

|IIF(VAR.UseCombatManueverBonus:1)|
|IIF(VAR.IF(VAR("CMD")>0;1;0):1)|
  <tr valign="top">
    <td width="25%"><b>Base Attack/CMB/CMD: </b></td>
    <td width="75%">|VAR.BAB.INTVAL.SIGN|; |VAR.CMB.INTVAL.SIGN| ; |VAR.CMD.INTVAL|
    </td>
  </tr>
|ELSE|
  <tr valign="top">
    <td width="25%"><b>Base Attack/CMB: </b></td>
    <td width="75%">|VAR.BAB.INTVAL.SIGN|; |VAR.CMB.INTVAL.SIGN|
    </td>
  </tr>
|ENDIF|
|ELSE|
  <tr valign="top">
    <td width="25%"><b>Base Attack/Grapple: </b></td>
    <td width="75%">|VAR.BAB.INTVAL.SIGN|; 
|IIF(VAR.IF(var("CanNotGrapple")==0;1;0):1)|
|VAR.(STR+BAB+(SIZE-4)+(SIZE-4)+(SIZE-4)+(SIZE-4)+(ATTACK.GRAPPLE.MISC)).INTVAL.SIGN|
|ELSE|
&mdash;
|ENDIF|   
    </td>
  </tr>
|ENDIF|

  <tr valign="top">
    <td width="25%"><b>Full Attack: </b></td>
    <td width="75%">

|FOR,%weap,0,COUNT[EQTYPE.Weapon]-1,1,0|
<strong>|WEAPON.%weap.NAME.NOSTAR|</strong>
|IIF(WEAPON.%weap.BASEHIT:INVALIDTEXT.TOHIT)|
|WEAPON.%weap.THHIT|  melee |MANUALWHITESPACE|(|MANUALWHITESPACE||WEAPON.%weap.THDAMAGE|
|FOR,%CritTest,STRLEN[WEAPON.%weap.CRIT],STRLEN[WEAPON.%weap.CRIT],1,0|
|IIF(%CritTest:2)|
|ELSE|
/|WEAPON.%weap.CRIT|
|ENDIF|
|ENDFOR|
|IIF(WEAPON.%weap.MULT:2)|
|ELSE|
/x|WEAPON.%weap.MULT|
|ENDIF|
); 
|ELSE|
|WEAPON.%weap.BASEHIT| 
|IIF(WEAPON.%weap.ISTYPE.Ranged)|
 ranged
|ELSE|
 melee
|ENDIF|
 (|MANUALWHITESPACE|
|IIF(WEAPON.%weap.ISTYPE.Ranged)|
|MANUALWHITESPACE||WEAPON.%weap.RANGELIST.0.DAMAGE|
|ELSE|
|MANUALWHITESPACE||WEAPON.%weap.DAMAGE|
|ENDIF|
|FOR,%CritTest,STRLEN[WEAPON.%weap.CRIT],STRLEN[WEAPON.%weap.CRIT],1,0|
|IIF(%CritTest:2)|
|ELSE|
/|WEAPON.%weap.CRIT|
|ENDIF|
|ENDFOR|
|IIF(WEAPON.%weap.MULT:2)|
|ELSE|
/x|WEAPON.%weap.MULT|
|ENDIF|
|MANUALWHITESPACE|); 
|ENDIF|
|ENDFOR|
|ENDMANUALWHITESPACE|
    </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Attack: </b></td>
    <td width="75%">

|FOR,%weap,0,COUNT[EQTYPE.Weapon]-1,1,0|
<strong>|WEAPON.%weap.NAME.NOSTAR| </strong>
|IIF(WEAPON.%weap.BASEHIT:INVALIDTEXT.TOHIT)|
|WEAPON.%weap.THHIT.0| melee (|MANUALWHITESPACE||WEAPON.%weap.THDAMAGE|
|FOR,%CritTest,STRLEN[WEAPON.%weap.CRIT],STRLEN[WEAPON.%weap.CRIT],1,0|
|IIF(%CritTest:2)|
|ELSE|
/|WEAPON.%weap.CRIT||MANUALWHITESPACE|
|ENDIF|
|ENDFOR|
|IIF(WEAPON.%weap.MULT:2)|
|ELSE|
/x|WEAPON.%weap.MULT|
|ENDIF|
);|MANUALWHITESPACE| 
|ELSE|
|WEAPON.%weap.BASEHIT.0| 
|IIF(WEAPON.%weap.ISTYPE.Ranged)|
 ranged
|ELSE|
 melee
|ENDIF|
 (|MANUALWHITESPACE|
|IIF(WEAPON.%weap.ISTYPE.Ranged)|
|MANUALWHITESPACE||WEAPON.%weap.RANGELIST.0.DAMAGE|
|ELSE|
|MANUALWHITESPACE||WEAPON.%weap.DAMAGE|
|ENDIF|
|FOR,%CritTest,STRLEN[WEAPON.%weap.CRIT],STRLEN[WEAPON.%weap.CRIT],1,0|
|IIF(%CritTest:2)|
|ELSE|
/|WEAPON.%weap.CRIT|
|ENDIF|
|ENDFOR|
|IIF(WEAPON.%weap.MULT:2)|
|ELSE|
/x|WEAPON.%weap.MULT|
|ENDIF|
|MANUALWHITESPACE|); 
|ENDIF|
|ENDFOR|
|ENDMANUALWHITESPACE|
    </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Face/Reach: </b></td>
    <td width="75%">|FACE|/|REACH| </td>
  </tr>
  
|IIF(count("ABILITIES";"CATEGORY=Special Ability";"TYPE=SpecialAttack";"VISIBILITY=DEFAULT[or]VISIBILITY=OUTPUT_ONLY")>0)|
  <tr valign="top">
    <td width="25%"><b>Special Attacks: </b></td>
    <td width="75%"> 
|FOR,%specialAttack,0,count("ABILITIES","CATEGORY=Special Ability","TYPE=specialAttack","VISIBILITY=DEFAULT[or]VISIBILITY=OUTPUT_ONLY")-1,1,0|
|ABILITYALL.Special Ability.VISIBLE.%specialAttack.TYPE=specialAttack|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialAttack.TYPE=specialAttack.TYPE:Extraordinary)|
 (Ex)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialAttack.TYPE=specialAttack.TYPE:Supernatural)|
 (Su)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialAttack.TYPE=specialAttack.TYPE:SpellLike)|
 (Sp)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialAttack.TYPE=specialAttack.TYPE:PsiLike)|
 (Ps)|MANUALWHITESPACE|
|ENDIF|
,|ENDMANUALWHITESPACE|
|ENDFOR|
|ENDIF|


|IIF(count("ABILITIES";"CATEGORY=Special Ability";"TYPE=SpecialQuality";"VISIBILITY=DEFAULT[or]VISIBILITY=OUTPUT_ONLY")>0)|
  <tr valign="top">
    <td width="25%"><b>Special Qualities: </b></td>
    <td width="75%"> 
|FOR,%specialQuality,0,count("ABILITIES","CATEGORY=Special Ability","TYPE=SpecialQuality","VISIBILITY=DEFAULT[or]VISIBILITY=OUTPUT_ONLY")-1,1,0|
|ABILITYALL.Special Ability.VISIBLE.%specialQuality.TYPE=SpecialQuality|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialQuality.TYPE=SpecialQuality.TYPE:Extraordinary)|
 (Ex)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialQuality.TYPE=SpecialQuality.TYPE:Supernatural)|
 (Su)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialQuality.TYPE=SpecialQuality.TYPE:SpellLike)|
 (Sp)|MANUALWHITESPACE|
|ENDIF|
|IIF(ABILITYALL.Special Ability.VISIBLE.%specialQuality.TYPE=SpecialQuality.TYPE:PsiLike)|
 (Ps)|MANUALWHITESPACE|
|ENDIF|
,|ENDMANUALWHITESPACE|
|ENDFOR|
|ENDIF|



|IIF(count("ABILITIES";"CATEGORY=Special Ability";"TYPE=AnimalTrick";"VISIBILITY=DEFAULT[or]VISIBILITY=OUTPUT_ONLY")>0)|
  <tr valign="top">
    <td width="25%"><b>Animal Tricks:</b></td>
    <td width="75%">|ABILITYALLLIST.Special Ability.VISIBLE.TYPE=AnimalTrick|</td>
  </tr>
|ENDIF|
|FOR,%DRtest,STRLEN[DR],STRLEN[DR],1,0|
|IIF(%DRtest:0)|
|ELSE|
Damage Reduction |DR|, 
|ENDIF|
|ENDFOR|
|IIF(SR:0)|
|ELSE|
Spell Resistance |SR|, 
|ENDIF|
  <tr valign="top">
    <td width="25%"><b>Vision:</b></td>
|FOR,%vision,0,COUNT[VISION]-1,1,0|
|VISION.%vision|, 
|ENDFOR|
|SPECIALLIST|
</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Saves: </b></td>
    <td width="75%">Fort: |CHECK.FORTITUDE.TOTAL|, Ref: |CHECK.REFLEX.TOTAL|, Will: |CHECK.WILL.TOTAL|</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Abilities: </b></td>
    <td width="75%">
Str |STAT.0|, Dex |STAT.1|, Con |STAT.2|, Int |STAT.3|, Wis |STAT.4|, Cha |STAT.5|
     </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Skills: </b></td>
    	<td width="75%">

<!--   Trouble-shooting stuff   
|FOR.0,COUNT[SKILLSIT],100,\SKILL.%.NAME\ \SKILL.%.TOTAL.INTVAL.SIGN\;       , , ,0| 
-->
|FOR,%skill,0,${count("SKILLSIT", "VIEW=VISIBLE_EXPORT")-1},1,0|
|IIF(SKILL.%skill.TYPE:SkillUse)|
|ELSE|
|IIF(VAR.IF(var("SKILL.%skill.RANK")==0;1;0):1)|
|IIF(VAR.IF(var("SKILL.%skill.TOTAL")==0;1;0):1)|
|ELSE|
|SKILL.%skill| |SKILL.%skill.TOTAL.INTVAL.SIGN|; 
<!--><font color="#FF6600"></font>-->
|ENDIF|
|ELSE|
|SKILL.%skill| |SKILL.%skill.TOTAL.INTVAL.SIGN|; 
|ENDIF|
|ENDIF|
|ENDFOR|

	</td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Feats: </b></td>
    <td width="75%">|FEATLIST| <br /><font color="#FF00FF">|VFEATLIST|</font><br /><font color="#FF6600">|FEATAUTOLIST|</font>
<!-- 
|FOR,%feat,0,COUNT[FEATS]-2,1,0|
|FEAT.VISIBLE.%feat|, 
|ENDFOR|
|FOR,%feat,COUNT[FEATS]-1,COUNT[FEATS]-1,1,0|
|FEAT.VISIBLE.%feat|
|ENDFOR|
 -->
 </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Challenge Rating: </b></td>
    <td width="75%">
|IIF(CR:0)|
&mdash;
|ELSE|
|CR|
|ENDIF|
    </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Alignment: </b></td>
    <td width="75%">|ALIGNMENT| </td>
  </tr>
  <tr valign="top">
    <td width="25%"><b>Level Adjustment: </b></td>
    <td width="75%">
|IIF(VAR.IF(var("ECL-TL")==0;1;0):1)|
-
|ELSE|
+|VAR.ECL-TL.INTVAL|
|ENDIF|
</td>
  </tr>
</table>

<p><b>Languages: </b>|LANGUAGES|</p>

|%REGION|<p> Region: |REGION| </p>|%|

<p><b>Possessions: </b>|FOR.0,COUNT[EQUIPMENT.Not.Natural],100,\EQ.%.NAME\; , , ,0|</p>

<!-- SpellBooks -->
|FOR,%spellbook,2,COUNT[SPELLBOOKS]-1,1,0|
|IIF(SPELLBOOK.%spellbook.TYPE:Spell Book)|
<p><b>Spell Book: </b>|SPELLBOOKNAME.%spellbook| 
|FOR,%class,COUNT[SPELLRACE],COUNT[SPELLRACE]+COUNT[CLASSES]-1,1,1|
|IIF(SPELLLISTMEMORIZE.%class:false)|
|ELSE|
<br />|SPELLLISTCLASS.%class| (CL |SPELLLISTCLASS.%class.LEVEL|): 
|FOR,%level,0,9,1,1|
|FOR,%spelllevelcount,COUNT[SPELLSINBOOK.%class.%spellbook.%level],COUNT[SPELLSINBOOK.%class.%spellbook.%level],1,0|
|IIF(%spelllevelcount:0)|
<!-- no memorized spells for SPELLSINBOOK.%class %spellbook %level -->
|ELSE|
|MANUALWHITESPACE||%level||TEXT.NUMSUFFIX.%level||ENDMANUALWHITESPACE| -
|FOR,%spell,0,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-2,1,0|
<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i>
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:1)|
|ELSE|
(|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|)
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
(DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|)
|ENDIF|
, 
|ENDFOR|
|FOR,%spell,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,1,0|
|SPELLMEM.%class.%spellbook.%level.%spell.BONUSSPELL|<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i>
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:1)|
|ELSE|
(|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|)
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
(DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|)
|ENDIF|
|ENDFOR|
|ENDIF|
|ENDFOR|
|ENDFOR|
|ENDIF|
|ENDFOR|
|ELSE|
</p>
|ENDIF|
|ENDFOR|
<!-- End SpellBooks -->


|%DOMAIN.1|
<p><b>Deity: </b>|DEITY| <i>Domains</i>: |FOR.1,COUNT[DOMAINS]+1,1,\DOMAIN.%\(\DOMAIN.%.POWER\), ,NONE,2|</p>
|%|

<!-- Innate Spell-Like Abilities -->
|IIF(VAR.IF(VAR("COUNT[SPELLSINBOOK.0.1.0]")>0;1;0):1)|
<p><b>Innate Spell-Like Abilities:</b>
|FOR,%spellbook,1,1,1,0|
|FOR,%class,0,0,1,0|
|FOR,%level,0,0,1,0|
|%SPELLLISTBOOK.%class.%level.%spellbook|
|FOR,%spell,0,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,1,0|
<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i> (
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|, 
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:At Will)|
at will) 
|ELSE|
|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|/|SPELLMEM.%class.%spellbook.%level.%spell.TIMEUNIT|) 
|ENDIF|
|ENDFOR|
|%|
|ENDFOR|
|ENDFOR|
|ENDFOR|
</p>
|ENDIF|
<!-- End Innate Spell-Like Abilities -->

<!-- Other Spell-Like Abilities -->
|FOR,%spellbook,2,COUNT[SPELLBOOKS]-1,1,0|
|IIF(SPELLBOOK.%spellbook.TYPE:Innate Spell List)|
|IIF(VAR.IF(VAR("COUNT[SPELLSINBOOK.0.%spellbook.0]")>0;1;0):1)|
<p><b>|SPELLBOOK.%spellbook.NAME| Spell-Like Abilities:</b>
|FOR,%class,0,0,1,0|
|FOR,%level,0,0,1,0|
|%SPELLLISTBOOK.%class.%level.%spellbook|
|FOR,%spell,0,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,1,0|
<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i> (
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|, 
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:At Will)|
at will) 
|ELSE|
|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|/|SPELLMEM.%class.%spellbook.%level.%spell.TIMEUNIT|) 
|ENDIF|
|ENDFOR|
|%|
|ENDFOR|
|ENDFOR|
</p>
|ENDIF|
|ENDIF|
|ENDFOR|
<!-- End Other Spell-Like Abilities -->


|%SPELLLISTCLASS.0|
<p><i>Spells:</i></p>
|%|


<!-- Prepared Spells -->
|FOR,%spellbook,2,COUNT[SPELLBOOKS]-1,1,0|
|IIF(SPELLBOOK.%spellbook.TYPE:Prepared Spell List)|
<p><b>|SPELLBOOKNAME.%spellbook| Prepared Spells: </b>
|FOR,%class,COUNT[SPELLRACE],COUNT[SPELLRACE]+COUNT[CLASSES]-1,1,1|
|IIF(SPELLLISTMEMORIZE.%class:false)|
|ELSE|
<br />|SPELLLISTCLASS.%class| (CL |SPELLLISTCLASS.%class.LEVEL|): 
|FOR,%level,0,9,1,1|
|FOR,%spelllevelcount,COUNT[SPELLSINBOOK.%class.%spellbook.%level],COUNT[SPELLSINBOOK.%class.%spellbook.%level],1,0|
|IIF(%spelllevelcount:0)|
<!-- no memorized spells for SPELLSINBOOK.%class %spellbook %level -->
|ELSE|
|MANUALWHITESPACE||%level||TEXT.NUMSUFFIX.%level||ENDMANUALWHITESPACE| -
|FOR,%spell,0,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-2,1,0|
<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i>
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:1)|
|ELSE|
(|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|)
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
(DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|)
|ENDIF|
, 
|ENDFOR|
|FOR,%spell,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,COUNT[SPELLSINBOOK.%class.%spellbook.%level]-1,1,0|
|SPELLMEM.%class.%spellbook.%level.%spell.BONUSSPELL|<i>|TEXT.LOWER.SPELLMEM.%class.%spellbook.%level.%spell.NAME|</i>
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.TIMES:1)|
|ELSE|
(|SPELLMEM.%class.%spellbook.%level.%spell.TIMES|)
|ENDIF|
|IIF(SPELLMEM.%class.%spellbook.%level.%spell.SAVEINFO:None)|
|ELSE|
(DC |SPELLMEM.%class.%spellbook.%level.%spell.DC|)
|ENDIF|
|ENDFOR|
|ENDIF|
|ENDFOR|
|ENDFOR|
|ENDIF|
|ENDFOR|
|ELSE|
</p>
|ENDIF|
|ENDFOR|
<!-- End Prepared Spells -->

|FOR,%class,COUNT[SPELLRACE],COUNT[CLASSES],1,1|
|%SPELLLISTCLASS.%class|
<p><b>|SPELLLISTCLASS.%class|:</b> Spells per Day: (|FOR.0,9,1,\SPELLLISTCAST.%class.%\,NONE,/,0| DC:|SPELLLISTDC.%class.1|+spell level), Spells Known: 
|FOR,%level,0,MAXSPELLLEVEL.%class,1,1|
|%SPELLLISTBOOK.%class.%level.0|
<b>|MANUALWHITESPACE||%level||TEXT.NUMSUFFIX.%level||ENDMANUALWHITESPACE| - </b>
|FOR,%spell,0,COUNT[SPELLSINBOOK.%class.0.%level]-2,1,1|
|SPELLMEM.%class.0.%level.%spell.NAME|,
|ENDFOR|
|FOR,%spell,COUNT[SPELLSINBOOK.%class.0.%level]-1,COUNT[SPELLSINBOOK.%class.0.%level]-1,1,1|
|SPELLMEM.%class.0.%level.%spell.NAME|
|ENDFOR|
|%| 
|ENDFOR|
</p>
|ENDFOR| 
|%| 



</blockquote>
</body>
</html>

