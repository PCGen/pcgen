SOURCELONG:My Campaign	SOURCESHORT:My	SOURCEWEB:http://www.mywebsite.com	SOURCEDATE:2008-01

#insert your data here

#Every line that starts with a '#' is a comment. You may want to remove these comments, if you use this file to set up
#your own data. Remember not to put the '#' at the start of your own data, as PCGen would see it as a comment only.
#
#When Running PCGen, you can select "Help > Documentation > List Files > List File Tag Index > Feat File tags" to find
#out how the tags in the feats file work. Some of the tags used here are global tags. You will see an alphabetical
#listing of all PCGen tags to the left of the documentation window. You can find the global tags there as well.
#
# Abilities are the newest method for all aspects of class & race abilities. Currently we use hidden feats to emulate
# class and racial abilities. The advent of Abilities allows us to use one standard format for a variety of things.
# Generally Abilities are exactly the same in format as a Feat with the exception of a NEW tag CATEGORY which tells
# PCGen what the ability is to be categoried as - example: My Ability is part of the my_abilities category, So I can add
# points only to the my_abilities allowing very small and restricted lists. Another example would be Fighter Bonus feats.
#
# Feat and ability are used through out this example as they almost the same thing - ABILITY can also be used to add "Feats"
# using the CATEGORY:FEAT tag.
# You can also use PREFEAT for any CATEGORY:FEAT, for the rest you'll need to use PREABILITY:x,CATEGORY=<category>,Foo,TYPE.Bar (x is the number)
#####1st Example

#My Ability			CATEGORY:my_abilities		TYPE:General.DataMonkey		DESC:See Text						SOURCEPAGE:Custom
#My Second Ability	CATEGORY:Special			TYPE:MonkeyFoo			DESC:This is the great second ability.		SOURCEPAGE:Custom	PREABILITY:1,CATEGORY=my_abilities,My Ability

###SAMPLE FOR 'Ability by Skill'
#Ac Ba			CATEGORY:AbilitybySkill		TYPE:AbilitybySkill.Movement	VISIBLE:YES		!PREABILITY:1,CATEGORY=AbilitybySkill,Ac Ba	PRESKILL:1,Tumble=12	PREVARLT:AbilitybySkillCount,AbilitybySkillMax	DEFINE:AbilitybySkillCount|0		DESC:<appropriate description>	BONUS:VAR|AbilitybySkillCount|1

#####
#Each ability takes one line, just like a feat, and the first field must be the abilities' name. In the Example the name of the ability is My Ability.
#When naming feats you should only use parentheses at the end of the name if the name is not duplicated elsewhere. This is
#because of how PCGen names abilities which can be taken multiple times. For example, the Feat/ability Weapon Focus when taken will display
#as Weapon Focus(Dagger). Another example is Armor Proficiency (Light), there is no feat named Armor Proficiency so this name
#is fine. What is happening is when PCGen finds a feat with parentheses that duplicates the name of another feat it assumes
#that feat is an instance of the one without parentheses and does not display the one with parentheses.
#
#The TYPE tag is holding a . (period) delimited list of the types the ability/feat is.
#
#The DESC tag is used to hold the description of the Ability/Feat. In our files we usually keep the description brief, so the user
#still need to own the book to make use of the data, but for your personal files can get as elaborate as you want there.
#
#The MULT tag determines if a ability/feat can be taken multiple times. If the value is set to YES, then you MUST also use a CHOOSE
#tag.
#
#The CHOOSE tag must be paired with a MULT:YES tag in feats for it to work properly. It will display a popup window that asks
#for a selection according to what is being called for. There is a multitude of existing CHOOSE tags in PCGen. If you are
#looking into the documentation under List File Tag Index, you can find them listed under the topic "CHOOSE tags".
#
#The BONUS tags are a group of similar tags, that grant some form of Bonus to another already existing tag. To read a description
#of them, look in the List File Tag Index under the topic "Bonus tags".
#
#The SOURCEPAGE tag can be used to hold a reference to where you can find the feat. This will be displayed in PCGen.
